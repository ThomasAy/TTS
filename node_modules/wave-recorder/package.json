{
  "name": "wave-recorder",
  "version": "1.0.0",
  "description": "Pipe Web Audio API nodes into 16bit PCM Wave files",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mmckegg/wave-recorder.git"
  },
  "keywords": [
    "pcm",
    "web audio",
    "browser",
    "record",
    "encode"
  ],
  "author": {
    "name": "Matt McKegg"
  },
  "license": "MIT",
  "dependencies": {
    "wav": "~0.1.2"
  },
  "readme": "wave-recorder\n===\n\nPipe Web Audio API nodes into 16bit PCM Wave files.\n\n## Install\n\n```bash\n$ npm install wave-recorder\n```\n\n## Example\n\n```js\nvar fs = require('web-fs')\nvar WaveRecorder = require('wave-recorder')\n\nvar audioContext = new webkitAudioContext()\n\nnavigator.webkitGetUserMedia({audio:true}, function(stream) {\n  \n  // get the mic input\n  var audioInput = audioContext.createMediaStreamSource(stream)\n  var recorder = WaveRecorder(audioContext)\n\n  audioInput.connect(recorder.input)\n\n  var fileStream = fs.createWriteStream('test.wav')\n  recorder.pipe(fileStream)\n\n  // optionally go back and rewrite header with updated length\n  recorder.on('header', function(header){ \n    fileStream.on('close', function(){\n      var headerStream = fs.createWriteStream(filePath, {flags: 'r+', start:0})\n      headerStream.write(header)\n      headerStream.end()\n    })\n  })\n\n  // record for 10 seconds then stop\n  setTimeout(function(){\n    recorder.end()\n  }, 10000)\n})\n\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mmckegg/wave-recorder/issues"
  },
  "homepage": "https://github.com/mmckegg/wave-recorder",
  "_id": "wave-recorder@1.0.0",
  "dist": {
    "shasum": "607baa1d915d1f1fa1e545c82ce6e53e24669e11"
  },
  "_from": "wave-recorder@",
  "_resolved": "https://registry.npmjs.org/wave-recorder/-/wave-recorder-1.0.0.tgz"
}
